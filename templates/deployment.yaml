apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}
    spec:
      volumes:
        - name: app-code
          emptyDir: {}
      initContainers:
        - name: git-clone-or-pull
          image: alpine/git
          command:
            - sh
            - -c
            - |
              if [ -d /app/.git ]; then
                echo "Repo already exists, pulling latest changes..."
                git -C /app pull origin {{ .Values.gitBranch }}
              else
                echo "Cloning repo..."
                git clone --branch {{ .Values.gitBranch }} {{ .Values.gitRepo }} /app
              fi
          volumeMounts:
            - name: app-code
              mountPath: /app
      initContainers:
        - name: git-clone-or-pull
          image: alpine/git
          command:
            - sh
            - -c
            - |
              if [ -d /app/.git ]; then
                echo "Repo already exists, pulling latest changes..."
                git -C /app pull origin {{ .Values.gitBranch }}
              else
                echo "Cloning repo..."
                git clone --branch {{ .Values.gitBranch }} {{ .Values.gitRepo }} /app
              fi
          volumeMounts:
            - name: app-code
              mountPath: /app
      containers:
        - name: node-app
          image: ismail
          workingDir: /app
          command: ["sh", "-c", "npm install && npm start"]
          ports:
            - containerPort: 3000
          volumeMounts:
            - name: app-code
              mountPath: /app
